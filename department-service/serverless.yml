service:
  name: department-service
# app and org for use with dashboard.serverless.com
# app: serverless-test
org: debanshus

plugins:
  - serverless-offline
  - serverless-plugin-typescript 

provider:
  name: aws
  profile: serverless
  region: us-east-1
  stackName: department-service-stack
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: ${cf:database-service-stack.DepartmentTableArn}

functions:
  create:
    handler: src/departmentHandler.create
    events:
      - http:
          path: create
          method: post
          cors: true   

  update:
    handler: src/departmentHandler.update
    events:
      - http:
          path: update
          method: put
          cors: true   

  remove:
    handler: src/departmentHandler.remove
    events:
      - http:
          path: remove
          method: post
          cors: true   

  fetch:
    handler: src/departmentHandler.fetch
    events:
      - http:
          path: fetch/{deptId}
          method: get
          cors: true   

  fetchAll:
    handler: src/departmentHandler.fetchAll
    events:
      - http:
          path: fetchAll
          method: get
          cors: true   
